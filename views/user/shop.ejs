<%- include("../../views/partials/user/header") %>
<style>
 .main-container {
   max-width: 1200px;
   margin: 0 auto;
   padding: 20px;
   font-family: 'Playfair Display', 'Cormorant Garamond', serif;
 }
 .shop-topbar {
   display: flex;
   justify-content: space-between;
   align-items: center;
   margin-bottom: 20px;
   padding: 20px 0;
   border-bottom: 1px solid #ddd;
 }

 .search-form {
   position: relative;
   display: flex;
   align-items: center;
   background-color: #f1f1f1;
   border-radius: 25px;
   overflow: hidden;
   max-width: 400px;
   width: 100%;
   box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
   margin-top: 20px;
   margin-left: 100px;
 }

 .search-input {
   flex: 1;
   padding: 12px 20px;
   font-size: 16px;
   border: none;
   outline: none;
   background-color: transparent;
 }

 .search-button {
   padding: 12px 20px;
   background-color: #5C4033;
   color: #fff;
   border: none;
   cursor: pointer;
   font-size: 16px;
   transition: background-color 0.3s, transform 0.2s;
 }

 .search-button:hover {
   background-color: #8B5E3C;
   transform: scale(1.05);
 }
 
 .sidebar {
   padding: 20px;
   border: 1px solid #ddd;
   background-color: #f9f9f9;
   border-radius: 8px;
   margin-bottom: 20px;
   width: 250px;
 }

 .filter-section {
   margin-bottom: 20px;
 }

 .filter-title {
   font-weight: bold;
   margin-bottom: 10px;
   font-size: 16px;
   color: #333;
 }

 .filter-item {
   margin: 5px 0;
   list-style-type: none;
   transition: all 0.3s ease;
 }

 .filter-item a {
   text-decoration: none;
   color: #333;
   transition: all 0.3s ease;
   display: block;
   padding: 8px 15px;
   border-radius: 8px;
   background-color: #f8f9fa;
 }

 .filter-item a:hover {
   color: #5C4033;
   background-color: #f1f1f1;
   transform: translateX(5px);
 }

 .filter-item a.selected {
   background-color: #5C4033;
   color: white;
   font-weight: 500;
   box-shadow: 0 2px 8px rgba(92, 64, 51, 0.2);
   transform: translateX(5px);
 }

 .product-list-container {
   display: flex;
   flex-direction: row;
   gap: 20px;
 }

 .product-grid {
   display: grid;
   grid-template-columns: repeat(3, 1fr);
   gap: 30px;
   width: calc(100% - 270px);
 }

 .product-card {
   width: 100%;
   border: 1px solid #ddd;
   padding: 20px;
   border-radius: 8px;
   text-align: center;
   position: relative;
   transition: transform 0.3s, box-shadow 0.3s;
   background-color: #fff;
   overflow: hidden;
   display: flex;
   flex-direction: column;
 }

 .product-card:hover {
   transform: translateY(-5px);
   box-shadow: 0 5px 15px rgba(0,0,0,0.1);
 }

 .product-card img {
   width: 100%;
   height: 200px;
   object-fit: contain;
   border-radius: 5px;
   margin-bottom: 15px;
   background-color: #f9f9f9;
   padding: 5px;
 }

 .product-card h4 {
   margin: 10px 0;
   color: #333;
   font-family: 'Playfair Display', serif;
   font-weight: 600;
 }

 .product-card p {
   margin: 10px 0;
   color: #666;
   font-family: 'Cormorant Garamond', serif;
 }

 .product-card p.description {
   height: 40px;
   overflow: hidden;
   text-overflow: ellipsis;
   display: -webkit-box;
   /* -webkit-line-clamp: 2; */
   -webkit-box-orient: vertical;
 }

 .product-card a {
   text-decoration: none;
   color: inherit;
 }

 .wishlist-btn {
   position: absolute;
   top: 10px;
   right: 10px;
   background-color: white;
   border: none;
   border-radius: 50%;
   width: 35px;
   height: 35px;
   display: flex;
   align-items: center;
   justify-content: center;
   cursor: pointer;
   transition: all 0.3s ease;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
 }

 .wishlist-btn:hover {
   transform: scale(1.1);
   box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
 }

 .wishlist-btn.active {
   color: #a97155;
 }

 .wishlist-btn i {
   font-size: 18px;
   transition: transform 0.3s ease;
 }

 .wishlist-btn:hover i {
   transform: scale(1.2);
 }

 .add-to-cart-btn {
   background-color: #5C4033;
   color: white;
   border: none;
   padding: 12px 20px;
   border-radius: 25px;
   cursor: pointer;
   transition: all 0.3s ease;
   margin-top: auto;
   font-family: 'Cormorant Garamond', serif;
   font-weight: 600;
   letter-spacing: 0.5px;
   text-transform: uppercase;
   font-size: 14px;
   display: flex;
   align-items: center;
   justify-content: center;
   gap: 8px;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
 }

 .add-to-cart-btn:hover {
   background-color: #8B5E3C;
   transform: translateY(-2px);
   box-shadow: 0 5px 15px rgba(92, 64, 51, 0.2);
 }

 .add-to-cart-btn:disabled {
   background-color: #ccc;
   cursor: not-allowed;
   transform: none;
   box-shadow: none;
 }

 .add-to-cart-btn i {
   font-size: 16px;
   transition: transform 0.3s ease;
 }

 .add-to-cart-btn:hover i {
   transform: scale(1.2);
 }

 .pagination {
   display: flex;
   justify-content: center;
   margin-top: 30px;
   gap: 10px;
 }

 .pagination .btn {
   padding: 8px 15px;
   border: 1px solid #ddd;
   border-radius: 4px;
   text-decoration: none;
   color: #333;
   transition: all 0.3s;
   font-family: 'Cormorant Garamond', serif;
 }

 .pagination .btn:hover {
   background-color: #5C4033;
   color: white;
   border-color: #5C4033;
 }

 .pagination .btn.active {
   background-color: #5C4033;
   color: white;
   border-color: #5C4033;
 }

 .price-filter {
   padding: 10px;
   background-color: #f9f9f9;
   border-radius: 8px;
   margin-top: 20px;
 }

 .price-filter .price-options {
   display: flex;
   flex-direction: column;
   gap: 10px;
 }

 .price-button {
   padding: 12px 20px;
   background-color: #f1f1f1;
   color: #333;
   border: 1px solid #ddd;
   border-radius: 30px;
   cursor: pointer;
   transition: all 0.3s ease;
   text-align: center;
   font-size: 14px;
   font-family: 'Cormorant Garamond', serif;
   margin: 5px 0;
 }

 .price-button:hover {
   background-color: #5C4033;
   color: white;
   transform: scale(1.05);
   border-color: #5C4033;
 }

 .price-button.selected {
   background-color: #5C4033;
   color: white;
   border-color: #5C4033;
   box-shadow: 0 2px 8px rgba(92, 64, 51, 0.2);
   transform: scale(1.05);
 }

 .category-brand-container {
   text-align: center;
 }

 .category-brand-container ul {
   padding-left: 0;
 }

 .home-button {
   display: flex;
   align-items: center;
   padding: 10px 20px;
   background-color: #5C4033;
   color: white;
   text-decoration: none;
   border-radius: 25px;
   transition: background-color 0.3s, transform 0.2s;
   margin-left: 20px;
   margin-top: 20px;
   font-family: 'Cormorant Garamond', serif;
 }

 .home-button:hover {
   background-color: #8B5E3C;
   transform: scale(1.05);
   color: white;
   text-decoration: none;
 }

 .home-button i {
   margin-right: 8px;
 }

 .price-info {
   display: flex;
   justify-content: center;
   align-items: center;
   gap: 8px;
   margin: 10px 0;
 }

 .sale-price {
   font-size: 18px;
   font-weight: bold;
   color: #5C4033;
 }

 .regular-price {
   font-size: 14px;
   color: #999;
   text-decoration: line-through;
 }

 .shop-title {
   font-family: 'Playfair Display', serif;
   font-weight: 700;
   color: #5C4033;
 }

 /* Sort Dropdown Styles */
 .sort-container {
     display: flex;
     align-items: center;
     gap: 20px;
     margin-left: 40px;
     margin-top: 20px;
 }

 .sort-label {
     font-family: 'Cormorant Garamond', serif;
     font-size: 16px;
     color: #5C4033;
     font-weight: 500;
 }

 .sort-select {
     padding: 10px 15px;
     border: 1px solid #ddd;
     border-radius: 25px;
     background-color: #f1f1f1;
     color: #333;
     font-family: 'Cormorant Garamond', serif;
     font-size: 14px;
     cursor: pointer;
     outline: none;
     transition: all 0.3s ease;
     min-width: 200px;
     appearance: none;
     background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
     background-repeat: no-repeat;
     background-position: right 10px center;
     background-size: 15px;
     padding-right: 35px;
 }

 .sort-select:hover {
     border-color: #5C4033;
     box-shadow: 0 2px 8px rgba(92, 64, 51, 0.1);
 }

 .sort-select:focus {
     border-color: #5C4033;
     box-shadow: 0 2px 8px rgba(92, 64, 51, 0.2);
 }

 .clear-search-btn {
     position: absolute;
     right: 50px;
     color: #666;
     text-decoration: none;
     padding: 8px;
     transition: color 0.3s ease;
 }

 .clear-search-btn:hover {
     color: #333;
 }

 /* Toast Styles */
 .toast {
     position: fixed;
     bottom: 20px;
     right: 20px;
     padding: 12px 24px;
     border-radius: 8px;
     background-color: #4CAF50;
     color: white;
     font-family: 'Cormorant Garamond', serif;
     z-index: 1000;
     display: flex;
     align-items: center;
     gap: 10px;
     box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
 }

 .toast i {
     font-size: 18px;
 }

 .toast.error {
     background-color: #f44336;
 }

 @keyframes slideIn {
     from {
         transform: translateX(100%);
         opacity: 0;
     }
     to {
         transform: translateX(0);
         opacity: 1;
     }
 }

 @keyframes slideOut {
     from {
         transform: translateX(0);
         opacity: 1;
     }
     to {
         transform: translateX(100%);
         opacity: 0;
     }
 }

 /* Add to Cart Button Loading State */
 .add-to-cart-btn:disabled {
     opacity: 0.7;
     cursor: not-allowed;
 }

 .add-to-cart-btn i.fa-spinner {
     animation: spin 1s linear infinite;
 }

 @keyframes spin {
     0% { transform: rotate(0deg); }
     100% { transform: rotate(360deg); }
 }

 .clear-filters-btn {
   display: flex;
   align-items: center;
   gap: 8px;
   padding: 10px 15px;
   background-color: #f8f9fa;
   border: 1px solid #ddd;
   border-radius: 25px;
   color: #5C4033;
   font-family: 'Cormorant Garamond', serif;
   font-size: 14px;
   cursor: pointer;
   transition: all 0.3s ease;
   margin-bottom: 15px;
   width: 100%;
 }

 .clear-filters-btn:hover {
   background-color: #5C4033;
   color: white;
   border-color: #5C4033;
   transform: translateY(-2px);
   box-shadow: 0 2px 8px rgba(92, 64, 51, 0.2);
 }

 .clear-filters-btn i {
   font-size: 14px;
 }

@media (max-width: 1200px) {
  .main-container {
    padding: 10px;
  }
  .product-grid {
    gap: 18px;
  }
}
@media (max-width: 900px) {
  .product-list-container {
    flex-direction: column;
    gap: 0;
  }
  .sidebar {
    width: 100%;
    margin-bottom: 18px;
    padding: 15px 8px;
    border-radius: 8px;
  }
  .product-grid {
    width: 100%;
    grid-template-columns: repeat(2, 1fr);
    gap: 18px;
  }
}
@media (max-width: 768px) {
  .shop-topbar {
    flex-direction: column;
    align-items: stretch;
    gap: 10px;
    padding: 10px 0;
  }
  .search-form {
    margin-left: 0;
    margin-top: 10px;
    max-width: 100%;
  }
  .sort-container {
    margin-left: 0;
    margin-top: 10px;
    gap: 10px;
    flex-wrap: wrap;
  }
  .home-button {
    margin-left: 0;
    margin-top: 10px;
    width: 100%;
    justify-content: center;
  }
  .product-grid {
    grid-template-columns: 1fr;
    gap: 14px;
  }
  .product-card {
    padding: 12px 6px;
  }
}
@media (max-width: 600px) {
  .main-container {
    padding: 2px;
  }
  .sidebar {
    padding: 8px 2px;
    font-size: 15px;
  }
  .product-card {
    padding: 8px 2px;
    font-size: 15px;
  }
  .product-card img {
    height: 140px;
  }
  .shop-title {
    font-size: 1.2rem;
  }
  .search-input, .sort-select {
    font-size: 14px;
    padding: 8px 10px;
  }
}
</style>

<!-- Add Google Fonts for classy typography -->
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Cormorant+Garamond:wght@400;500;600&display=swap" rel="stylesheet">

<div class="main-container">
 <section class="shop-page container">
   <div class="shop-topbar">
     <h2 class="shop-title">Shop</h2>
     <div class="search-bar">
       <form action="/shop" method="GET" class="search-form">
         <input type="text" name="search" placeholder="Search products..." class="search-input" value="<%= search || '' %>" />
         <button type="submit" class="search-button">
           <i class="fas fa-search"></i>
         </button>
         <% if (search) { %>
           <a href="/shop" class="clear-search-btn">
             <i class="fas fa-times"></i>
           </a>
         <% } %>
       </form>
     </div>
     <div class="sort-container">
       <label for="sort" class="sort-label">Sort by:</label>
       <select id="sort" name="sort" class="sort-select" onchange="handleSort(this.value)">
         <option value="">Select an option</option>
         <option value="price_low_high" <%= locals.sort === 'price_low_high' ? 'selected' : '' %>>Price: Low to High</option>
         <option value="price_high_low" <%= locals.sort === 'price_high_low' ? 'selected' : '' %>>Price: High to Low</option>
         <option value="name_asc" <%= locals.sort === 'name_asc' ? 'selected' : '' %>>Name: A to Z</option>
         <option value="name_desc" <%= locals.sort === 'name_desc' ? 'selected' : '' %>>Name: Z to A</option>
         <option value="popularity" <%= locals.sort === 'popularity' ? 'selected' : '' %>>Popularity</option>
         <option value="rating" <%= locals.sort === 'rating' ? 'selected' : '' %>>Average Rating</option>
         <option value="newest" <%= locals.sort === 'newest' ? 'selected' : '' %>>New Arrivals</option>
         <option value="featured" <%= locals.sort === 'featured' ? 'selected' : '' %>>Featured</option>
       </select>
     </div>
     <a href="/" class="home-button">
       <i class="fas fa-home"></i> Home
     </a>
   </div>
  
   <div class="product-list-container">
     <!-- Sidebar first (left side) -->
     <aside class="sidebar">
       <div class="filter-section">
         <div class="filter-title">Categories</div>
         <div class="category-brand-container">
           <ul id="categoryList">
               <% categories.forEach(category => { %>
                   <li class="filter-item">
                       <a href="/filter?category=<%= category._id %>"><%= category.name %></a>
                   </li>
               <% }); %>
           </ul>
         </div>
       </div>
      
       <div class="filter-section">
        <div class="filter-title">Brands</div>
        <div class="category-brand-container">
          <ul>
            <% if (brands && brands.length > 0) { %>
              <% brands.forEach(brand => { %>
                <li class="filter-item">
                  <a href="/filter?brand=<%= brand._id %>"><%= brand.brandName %></a>
                </li>
              <% }); %>
            <% } else { %>
              <li class="filter-item">No brands available</li>
            <% } %>
          </ul>
        </div>
      </div>
      
       <div class="price-filter">
         <div class="filter-title">Filter by Price</div>
         <form id="price-filter-form">
           <div class="price-options">
             <button type="button" class="price-button" onclick="handleFilter('price', '0-1000')">Under ₹1000</button>
             <button type="button" class="price-button" onclick="handleFilter('price', '1000-2000')">₹1000 - ₹2000</button>
             <button type="button" class="price-button" onclick="handleFilter('price', '2000-5000')">₹2000 - ₹5000</button>
             <button type="button" class="price-button" onclick="handleFilter('price', '5000-100000')">Above ₹5000</button>
           </div>
         </form>
       </div>
     </aside>

     <!-- Product grid second (right side) -->
     <main class="product-grid">
         <% if (products && products.length > 0) { %>
             <% products.forEach(product => { %>
                 <div class="product-card">
                     <span class="wishlist-btn" onclick="toggleWishlist('<%= product._id %>')" id="wishlistBtn-<%= product._id %>">
                         <i class="far fa-heart"></i>
                     </span>
                     <div class="product-image">
                         <a href="/product/<%= product._id %>">
                             <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" />
                         </a>
                     </div>
                     <a href="/product/<%= product._id %>" class="product-info">
                         <h4><%= product.productName %></h4>
                         <p class="description"><%= product.description %></p>
                         <div class="price-info">
                             <span class="sale-price">₹<%= product.salePrice %></span>
                             <% if (product.regularPrice) { %>
                                 <span class="regular-price">₹<%= product.regularPrice %></span>
                             <% } %>
                         </div>
                     </a>
                     <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
                 </div>
             <% }); %>
         <% } else { %>
             <div class="col-12 text-center">
                 <p>No products found</p>
             </div>
         <% } %>
     </main>
   </div>

<!-- Pagination -->
<div class="pagination">
    <% if (currentPage > 1) { %>
      <a class="btn" href="/shop?page=<%= currentPage - 1 %><%= search ? `&search=${search}` : '' %><%= sort ? `&sort=${sort}` : '' %><%= selectedCategory ? `&category=${selectedCategory}` : '' %><%= selectedBrand ? `&brand=${selectedBrand}` : '' %><%= priceRange ? `&gt=${priceRange.split('-')[0]}&lt=${priceRange.split('-')[1]}` : '' %>">Prev</a>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
      <a class="btn <%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %><%= search ? `&search=${search}` : '' %><%= sort ? `&sort=${sort}` : '' %><%= selectedCategory ? `&category=${selectedCategory}` : '' %><%= selectedBrand ? `&brand=${selectedBrand}` : '' %><%= priceRange ? `&gt=${priceRange.split('-')[0]}&lt=${priceRange.split('-')[1]}` : '' %>"><%= i %></a>
    <% } %>

    <% if (currentPage < totalPages) { %>
      <a class="btn" href="/shop?page=<%= currentPage + 1 %><%= search ? `&search=${search}` : '' %><%= sort ? `&sort=${sort}` : '' %><%= selectedCategory ? `&category=${selectedCategory}` : '' %><%= selectedBrand ? `&brand=${selectedBrand}` : '' %><%= priceRange ? `&gt=${priceRange.split('-')[0]}&lt=${priceRange.split('-')[1]}` : '' %>">Next</a>
    <% } %>
</div>
  
 </section>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script>
    // Check wishlist status for all products when page loads
    document.addEventListener('DOMContentLoaded', async () => {
        const products = document.querySelectorAll('[id^="wishlistBtn-"]');
        for (const btn of products) {
            const productId = btn.id.split('-')[1];
            try {
                const response = await fetch(`/user/wishlist/status/${productId}`);
                const data = await response.json();
                updateWishlistButton(productId, data.isInWishlist);
            } catch (error) {
                console.error('Error checking wishlist status:', error);
            }
        }
    });

    async function toggleWishlist(productId) {
        try {
            const response = await fetch('/user/wishlist/toggle', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });
            
            const data = await response.json();
            if (response.ok) {
                updateWishlistButton(productId, data.isInWishlist);
                showToast(data.message);
            } else {
                showToast(data.message, 'error');
            }
        } catch (error) {
            console.error('Error updating wishlist:', error);
            showToast('Error updating wishlist', 'error');
        }
    }

    function updateWishlistButton(productId, isInWishlist) {
        const wishlistBtn = document.getElementById(`wishlistBtn-${productId}`);
        const heartIcon = wishlistBtn.querySelector('i');
        
        if (isInWishlist) {
            wishlistBtn.classList.add('active');
            heartIcon.classList.add('fas');
            heartIcon.classList.remove('far');
        } else {
            wishlistBtn.classList.remove('active');
            heartIcon.classList.add('far');
            heartIcon.classList.remove('fas');
        }
    }

    function showToast(message, type = 'success') {
        // Remove any existing toasts
        const existingToasts = document.querySelectorAll('.toast');
        existingToasts.forEach(toast => toast.remove());
        
        // Create toast element
        const toast = document.createElement('div');
        toast.className = `toast ${type}`;
        
        // Add icon based on type
        const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
        toast.innerHTML = `<i class="fas ${icon}"></i> ${message}`;
        
        // Add to page
        document.body.appendChild(toast);
        
        // Add animation
        toast.style.animation = 'slideIn 0.3s ease-out';
        
        // Remove after 3 seconds
        setTimeout(() => {
            toast.style.animation = 'slideOut 0.3s ease-in';
            setTimeout(() => toast.remove(), 300);
        }, 3000);
    }

    async function addToCart(productId) {
        try {
            const button = document.querySelector(`.add-to-cart-btn[onclick="addToCart('${productId}')"]`);
            const productCard = button.closest('.product-card');
            const productName = productCard.querySelector('h4').textContent;
            
            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
            
            const response = await fetch('/user/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: 1
                })
            });
            
            const data = await response.json();
            
            if (response.ok) {
                Swal.fire({
                    title: 'Added to Cart!',
                    text: `"${productName}" has been added to your cart`,
                    icon: 'success',
                    confirmButtonColor: '#5C4033',
                    timer: 2000,
                    timerProgressBar: true
                });
                
                button.innerHTML = '<i class="fas fa-check"></i> Added';
                button.style.backgroundColor = '#4CAF50';
                
                setTimeout(() => {
                    button.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
                    button.style.backgroundColor = '#5C4033';
                    button.disabled = false;
                }, 2000);
            } else if (response.status === 401) {
                Swal.fire({
                    title: 'Sign in Required',
                    text: 'Please sign in to add items to your cart',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#5C4033',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Sign In',
                    cancelButtonText: 'Continue Shopping'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    } else {
                        button.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
                        button.style.backgroundColor = '#5C4033';
                        button.disabled = false;
                    }
                });
            } else {
                if (data.message === 'Maximum quantity per product is 5') {
                    Swal.fire({
                        title: 'Maximum Product Quantity',
                        text: 'You can only add up to 5 items of this product',
                        icon: 'warning',
                        confirmButtonColor: '#5C4033'
                    });
                } else if (data.message === 'Maximum total items in cart is 10') {
                    Swal.fire({
                        title: 'Cart Limit Reached',
                        text: 'You can only have a maximum of 10 items in your cart',
                        icon: 'warning',
                        confirmButtonColor: '#5C4033'
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: data.message || 'Error adding to cart',
                        icon: 'error',
                        confirmButtonColor: '#5C4033'
                    });
                }
                button.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
                button.style.backgroundColor = '#5C4033';
                button.disabled = false;
            }
        } catch (error) {
            console.error('Error adding to cart:', error);
            Swal.fire({
                title: 'Error',
                text: 'Error adding to cart',
                icon: 'error',
                confirmButtonColor: '#5C4033'
            });
            button.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
            button.style.backgroundColor = '#5C4033';
            button.disabled = false;
        }
    }

    function handleSort(sortValue) {
        const currentUrl = new URL(window.location.href);
        if (sortValue) {
            currentUrl.searchParams.set('sort', sortValue);
        } else {
            currentUrl.searchParams.delete('sort');
        }
        window.location.href = currentUrl.toString();
    }

    function handleFilter(type, value) {
        const currentUrl = new URL(window.location.href);
        const search = currentUrl.searchParams.get('search') || '';
        const sort = currentUrl.searchParams.get('sort') || '';
        
        // Reset to first page when applying new filter
        currentUrl.searchParams.set('page', '1');
        
        // Preserve search and sort parameters
        if (search) currentUrl.searchParams.set('search', search);
        if (sort) currentUrl.searchParams.set('sort', sort);
        
        // Update the specific filter without removing other filters
        if (type === 'category') {
            currentUrl.searchParams.set('category', value);
        } else if (type === 'brand') {
            currentUrl.searchParams.set('brand', value);
        } else if (type === 'price') {
            const [gt, lt] = value.split('-');
            currentUrl.searchParams.set('gt', gt);
            currentUrl.searchParams.set('lt', lt);
        }
        
        window.location.href = currentUrl.toString();
    }

    // Function to clear all filters
    function clearAllFilters() {
        const currentUrl = new URL(window.location.href);
        const search = currentUrl.searchParams.get('search') || '';
        const sort = currentUrl.searchParams.get('sort') || '';
        
        // Clear all filter parameters
        currentUrl.searchParams.delete('category');
        currentUrl.searchParams.delete('brand');
        currentUrl.searchParams.delete('gt');
        currentUrl.searchParams.delete('lt');
        
        // Preserve search and sort
        if (search) currentUrl.searchParams.set('search', search);
        if (sort) currentUrl.searchParams.set('sort', sort);
        
        window.location.href = currentUrl.toString();
    }

    // Update filter links to use the new handler
    document.addEventListener('DOMContentLoaded', function() {
        // Update category links
        document.querySelectorAll('.filter-item a').forEach(link => {
            const href = link.getAttribute('href');
            if (href.includes('category=')) {
                const categoryId = href.split('category=')[1];
                link.setAttribute('onclick', `handleFilter('category', '${categoryId}'); return false;`);
            } else if (href.includes('brand=')) {
                const brandId = href.split('brand=')[1];
                link.setAttribute('onclick', `handleFilter('brand', '${brandId}'); return false;`);
            }
        });

        // Add clear filters button if any filter is active
        const urlParams = new URLSearchParams(window.location.search);
        const hasFilters = urlParams.has('category') || urlParams.has('brand') || (urlParams.has('gt') && urlParams.has('lt'));
        
        if (hasFilters) {
            const clearFiltersBtn = document.createElement('button');
            clearFiltersBtn.className = 'clear-filters-btn';
            clearFiltersBtn.innerHTML = '<i class="fas fa-times"></i> Clear All Filters';
            clearFiltersBtn.onclick = clearAllFilters;
            document.querySelector('.filter-section').prepend(clearFiltersBtn);
        }

        // Highlight selected filters
        const category = urlParams.get('category');
        const brand = urlParams.get('brand');
        const gt = urlParams.get('gt');
        const lt = urlParams.get('lt');

        if (category) {
            document.querySelectorAll('.filter-item a').forEach(link => {
                if (link.getAttribute('onclick')?.includes(`category', '${category}'`)) {
                    link.classList.add('selected');
                }
            });
        }

        if (brand) {
            document.querySelectorAll('.filter-item a').forEach(link => {
                if (link.getAttribute('onclick')?.includes(`brand', '${brand}'`)) {
                    link.classList.add('selected');
                }
            });
        }

        if (gt && lt) {
            document.querySelectorAll('.price-button').forEach(button => {
                const buttonValue = button.getAttribute('onclick')?.match(/'([^']+)'/)?.[1];
                if (buttonValue === `${gt}-${lt}`) {
                    button.classList.add('selected');
                }
            });
        }
    });
</script>
<%- include("../../views/partials/user/footer") %>