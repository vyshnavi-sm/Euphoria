<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Verification - OTP</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #f4f1ec 0%, #e8e2d8 100%);
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px;
            overflow-x: hidden;
        }

        .otp-wrapper {
            width: 100%;
            max-width: 450px;
            margin: 0 auto;
        }

        .otp-container {
            background: #ffffff;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            padding: 40px 35px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .otp-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #8b5e3c, #6d4a31, #8b5e3c);
        }

        .otp-container:hover {
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
        }

        .otp-container h3 {
            font-size: clamp(22px, 5vw, 28px);
            font-weight: 700;
            color: #5a3d2b;
            margin-bottom: 30px;
            text-align: center;
            position: relative;
            padding-bottom: 20px;
        }

        .otp-container h3:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 4px;
            background: linear-gradient(90deg, #8b5e3c, #6d4a31);
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 30px;
        }

        .form-group label {
            display: block;
            font-weight: 600;
            color: #5a3d2b;
            margin-bottom: 15px;
            font-size: clamp(14px, 3vw, 16px);
            text-align: center;
        }

        .otp-input-group {
            display: flex;
            gap: clamp(4px, 1.5vw, 12px);
            justify-content: center;
            margin-bottom: 25px;
            flex-wrap: nowrap;
            max-width: 100%;
        }

        .otp-input {
            width: clamp(35px, 10vw, 55px);
            height: clamp(35px, 10vw, 55px);
            padding: clamp(4px, 1vw, 10px);
            font-size: clamp(14px, 3.5vw, 20px);
            font-weight: 600;
            text-align: center;
            border: 2px solid #d4b5a0;
            border-radius: clamp(8px, 2vw, 12px);
            background: #fefefe;
            transition: all 0.3s ease;
            color: #5a3d2b;
            flex-shrink: 0;
            min-width: 35px;
        }

        .otp-input:focus {
            border-color: #8b5e3c;
            box-shadow: 0 0 0 3px rgba(139, 94, 60, 0.2);
            outline: none;
            transform: scale(1.05);
        }

        .otp-input:valid {
            border-color: #8b5e3c;
            background: #f8f6f4;
        }

        .btn-primary {
            background: linear-gradient(135deg, #8b5e3c 0%, #6d4a31 100%);
            border: none;
            padding: clamp(12px, 3vw, 16px) 24px;
            font-size: clamp(14px, 3.5vw, 16px);
            font-weight: 600;
            border-radius: 12px;
            transition: all 0.3s ease;
            width: 100%;
            color: white;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #6d4a31 0%, #5a3d2b 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(139, 94, 60, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-primary:disabled {
            background: #a0a0a0;
            cursor: not-allowed;
            transform: none;
        }

        .otp-timer {
            text-align: center;
            color: #5a3d2b;
            margin: 20px 0;
            font-size: clamp(13px, 3vw, 15px);
            font-weight: 500;
            padding: 10px;
            background: rgba(139, 94, 60, 0.1);
            border-radius: 8px;
            border: 1px solid rgba(139, 94, 60, 0.2);
        }

        .resend-btn {
            background: none;
            border: 2px solid #8b5e3c;
            color: #8b5e3c;
            padding: clamp(8px, 2vw, 12px) clamp(16px, 4vw, 24px);
            border-radius: 8px;
            cursor: pointer;
            font-size: clamp(12px, 3vw, 14px);
            font-weight: 500;
            display: block;
            margin: 15px auto 0;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .resend-btn:hover {
            background: #8b5e3c;
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(139, 94, 60, 0.2);
        }

        .resend-btn:disabled {
            background: #f5f5f5;
            border-color: #d0d0d0;
            color: #a0a0a0;
            cursor: not-allowed;
            transform: none;
        }

        .alert {
            padding: clamp(10px, 3vw, 15px);
            border-radius: 10px;
            margin-top: 20px;
            text-align: center;
            font-size: clamp(12px, 3vw, 14px);
            animation: slideIn 0.5s ease;
            font-weight: 500;
        }

        .alert-danger {
            background: linear-gradient(135deg, #f8d7da, #f1c2c7);
            border: 1px solid #f5c6cb;
            color: #721c24;
        }

        @keyframes slideIn {
            from { 
                opacity: 0; 
                transform: translateY(-20px);
            }
            to { 
                opacity: 1; 
                transform: translateY(0);
            }
        }

        /* Mobile First Responsive Design */
        @media (max-width: 480px) {
            body {
                padding: 10px;
            }
            
            .otp-container {
                padding: 25px 15px;
                border-radius: 15px;
            }
            
            .otp-container h3 {
                margin-bottom: 25px;
            }
            
            .otp-input-group {
                gap: clamp(3px, 1vw, 6px);
                margin-bottom: 20px;
                padding: 0 5px;
            }
            
            .form-group {
                margin-bottom: 25px;
            }
        }

        @media (max-width: 375px) {
            .otp-input-group {
                gap: clamp(2px, 0.8vw, 4px);
                padding: 0 2px;
            }
            
            .otp-container {
                padding: 20px 10px;
            }
        }

        @media (max-width: 320px) {
            .otp-input-group {
                gap: 2px;
                padding: 0;
            }
            
            .otp-input {
                min-width: 30px;
                font-size: 12px;
            }
        }

        /* Tablet */
        @media (min-width: 481px) and (max-width: 768px) {
            .otp-wrapper {
                max-width: 500px;
            }
            
            .otp-container {
                padding: 45px 40px;
            }
        }

        /* Desktop */
        @media (min-width: 769px) {
            .otp-wrapper {
                max-width: 480px;
            }
            
            .otp-container {
                padding: 50px 45px;
            }
        }

        /* Large Desktop */
        @media (min-width: 1200px) {
            .otp-container {
                padding: 55px 50px;
            }
        }

        /* Landscape orientation for mobile */
        @media (orientation: landscape) and (max-height: 500px) {
            body {
                padding: 10px;
            }
            
            .otp-container {
                padding: 20px;
            }
            
            .otp-container h3 {
                margin-bottom: 20px;
            }
            
            .form-group {
                margin-bottom: 20px;
            }
        }

        /* High DPI displays */
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
            .otp-container {
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            }
        }

        /* Accessibility improvements */
        @media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }

        /* Focus styles for better accessibility */
        .otp-input:focus,
        .btn-primary:focus,
        .resend-btn:focus {
            outline: 2px solid #8b5e3c;
            outline-offset: 2px;
        }
    </style>
</head>
<body>
    <div class="otp-wrapper">
        <div class="otp-container">
            <h3>Email Verification</h3>
            <form id="otpForm" onsubmit="return validateOTPForm(event)">
                <div class="form-group">
                    <label for="otp">Enter 6-Digit OTP:</label>
                    <div class="otp-input-group">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                        <input type="text" maxlength="1" class="otp-input" required inputmode="numeric" pattern="[0-9]" autocomplete="one-time-code">
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Verify OTP</button>
                <div class="otp-timer">
                    <span id="otpTimer">OTP Expires in: 1:00</span>
                </div>
                <button type="button" onclick="resendOTP()" class="resend-btn">Resend OTP</button>
                <div id="alertContainer"></div>
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let timerInterval;
        let remainingTime = 60;
        const resendButton = document.querySelector('.resend-btn');
        const timerElement = document.getElementById('otpTimer');

        function startOTPTimer() {
            resendButton.disabled = true;
            resendButton.textContent = 'Resend OTP';
            
            remainingTime = 60;
            updateTimerDisplay();

            if (timerInterval) {
                clearInterval(timerInterval);
            }

            timerInterval = setInterval(() => {
                remainingTime--;
                updateTimerDisplay();

                if (remainingTime <= 0) {
                    clearInterval(timerInterval);
                    enableResendButton();
                }
            }, 1000);
        }

        function updateTimerDisplay() {
            const minutes = Math.floor(remainingTime / 60);
            const seconds = remainingTime % 60;
            timerElement.textContent = `OTP Expires in: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        }

        function enableResendButton() {
            resendButton.disabled = false;
            timerElement.textContent = 'OTP Expired - You can resend now';
        }

        function showAlert(message, type = 'danger') {
            const alertContainer = document.getElementById('alertContainer');
            alertContainer.innerHTML = `
                <div class="alert alert-${type}">
                    ${message}
                </div>
            `;
            setTimeout(() => {
                alertContainer.innerHTML = '';
            }, 5000);
        }

        function resendOTP() {
            if (resendButton.disabled) return;

            resendButton.disabled = true;
            resendButton.textContent = 'Sending...';

            $.ajax({
                type: 'POST',
                url: '/resend-forgot-otp',
                success: function (response) {
                    if (response.success) {
                        document.querySelectorAll('.otp-input').forEach(input => {
                            input.value = '';
                        });
                        
                        startOTPTimer();
                        
                        Swal.fire({
                            icon: 'success',
                            title: 'OTP Resent',
                            text: 'Please check your email for the new OTP',
                            timer: 3000,
                            showConfirmButton: false,
                            customClass: {
                                confirmButton: 'btn-primary'
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message || 'Failed to resend OTP. Please try again.',
                            customClass: {
                                confirmButton: 'btn-primary'
                            }
                        });
                        enableResendButton();
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error occurred while resending OTP. Please try again.',
                        customClass: {
                            confirmButton: 'btn-primary'
                        }
                    });
                    enableResendButton();
                }
            });
        }

        function validateOTPForm(event) {
            event.preventDefault();
            
            const otpInputs = document.querySelectorAll(".otp-input");
            let otpValue = "";
            otpInputs.forEach(input => {
                otpValue += input.value;
            });

            if (otpValue.length !== 6) {
                Swal.fire({
                    icon: "error",
                    title: "Invalid OTP",
                    text: "Please enter all 6 digits of the OTP",
                    customClass: {
                        confirmButton: 'btn-primary'
                    }
                });
                return false;
            }

            const submitButton = document.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            submitButton.disabled = true;
            submitButton.textContent = "Verifying...";

            $.ajax({
                type: "POST",
                url: "/verify-passForgot-otp",
                data: { otp: otpValue },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: response.message,
                            showConfirmButton: false,
                            timer: 1500,
                            customClass: {
                                confirmButton: 'btn-primary'
                            }
                        }).then(() => {
                            window.location.href = response.redirectUrl;
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: response.message,
                            customClass: {
                                confirmButton: 'btn-primary'
                            }
                        });
                        submitButton.disabled = false;
                        submitButton.textContent = originalText;
                    }
                },
                error: function (xhr) {
                    const response = xhr.responseJSON || {};
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: response.message || "Something went wrong. Please try again.",
                        customClass: {
                            confirmButton: 'btn-primary'
                        }
                    });
                    submitButton.disabled = false;
                    submitButton.textContent = originalText;
                }
            });
            return false;
        }

        // Enhanced OTP input handling
        document.addEventListener('DOMContentLoaded', function() {
            const otpInputs = document.querySelectorAll('.otp-input');
            
            otpInputs.forEach((input, index) => {
                // Handle input
                input.addEventListener('input', function(e) {
                    // Only allow numbers
                    this.value = this.value.replace(/[^0-9]/g, '');
                    
                    if (this.value.length === 1) {
                        if (index < otpInputs.length - 1) {
                            otpInputs[index + 1].focus();
                        }
                    }
                });
                
                // Handle backspace
                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Backspace') {
                        if (!this.value && index > 0) {
                            otpInputs[index - 1].focus();
                        }
                    }
                    
                    // Handle arrow keys
                    if (e.key === 'ArrowLeft' && index > 0) {
                        otpInputs[index - 1].focus();
                    }
                    if (e.key === 'ArrowRight' && index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                });

                // Handle paste
                input.addEventListener('paste', function(e) {
                    e.preventDefault();
                    const pastedData = e.clipboardData.getData('text');
                    const digits = pastedData.replace(/[^0-9]/g, '').split('');
                    
                    digits.forEach((digit, i) => {
                        if (index + i < otpInputs.length) {
                            otpInputs[index + i].value = digit;
                        }
                    });
                    
                    // Focus on the next empty input or the last input
                    const nextIndex = Math.min(index + digits.length, otpInputs.length - 1);
                    otpInputs[nextIndex].focus();
                });
            });

            // Start timer on page load
            startOTPTimer();
        });
    </script>
</body>
</html>