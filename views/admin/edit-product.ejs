<%- include("../../views/partials/admin/header") %>
<head>
    <style>
        /* All your existing styles preserved */
        .content-main {
            margin-left: 600px;
            margin-top: 50px;
        }
    
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }
    
        .thumbnail {
            margin-right: 10px;
        }
    
        .input-upload {
            position: relative;
        }
    
        .error-message {
            color: #b22222;
            display: none;
        }
    
        /* Brown Theme Styling */
        body {
            background-color: #f5f0eb;
            font-family: 'Poppins', sans-serif;
        }
    
        h2.content-title {
            color: #5d3a00;
        }
    
        .form-label {
            color: #5d3a00;
            font-weight: 500;
        }
    
        .form-control,
        .form-select {
            border-color: #a47449;
            background-color: #fffaf5;
        }
    
        .form-control:focus,
        .form-select:focus {
            border-color: #7b4f2d;
            box-shadow: 0 0 0 0.1rem rgba(139, 69, 19, 0.25);
        }
    
        .card {
            border: 1px solid #d2b48c;
            background-color: #fffaf2;
        }
    
        .card-header {
            background-color: #e6d3c0;
            color: #4e342e;
            font-weight: 600;
        }
    
        .btn.btn-info {
            background-color: #8b5e3c;
            color: white;
            border: none;
        }
    
        .btn.btn-info:hover {
            background-color: #70472c;
        }
    
        .btn.btn-primary,
        .btn.btn-primary:focus {
            background-color: #a0522d;
            border-color: #a0522d;
        }
    
        .btn.btn-primary:hover {
            background-color: #8b4513;
            border-color: #8b4513;
        }
    
        .btn.btn-md {
            background-color: #7a491f;
            color: white;
            border: none;
        }
    
        .btn.btn-md:hover {
            background-color: #5c3615;
        }
    
        .image-cropper {
            border: 1px solid #d2b48c;
            background-color: #fcf7f1;
            margin: 10px 0;
            padding: 10px;
        }

        /* Enhanced cropper styling */
        .cropper-container {
            width: 100%;
            max-width: 100%;
        }

        .cropper-view-box,
        .cropper-face {
            border-radius: 0;
        }

        /* Add status message styling */
        .status-message {
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 5px;
        }
        
        .success-message {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .error-message-visible {
            display: block;
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            padding: 5px;
            margin-top: 5px;
            border-radius: 4px;
        }

        /* Image preview container */
        .image-preview {
            margin-bottom: 10px;
            position: relative;
        }

        .image-preview img {
            border: 2px solid #e6d3c0;
            border-radius: 4px;
        }

        /* Loading spinner for deletion */
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: #a0522d;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        .preview-image-container {
            position: relative;
            margin-bottom: 15px;
        }

        .preview-image {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 4px;
        }

        .remove-preview {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .remove-preview:hover {
            background-color: rgba(255, 0, 0, 0.9);
        }
    </style>
    
    <!-- Make sure to include these scripts in this specific order -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    
    <!-- Add CSRF token if your application uses it -->
    <meta name="csrf-token" content="<%= typeof csrfToken !== 'undefined' ? csrfToken : '' %>">
</head>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
                <% if (locals.error) { %>
                    <div class="status-message error-message-visible">
                        <%= error %>
                    </div>
                <% } %>
                <% if (locals.success) { %>
                    <div class="status-message success-message">
                        <%= success %>
                    </div>
                <% } %>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" id="editProductForm">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%= product.productName %>"
                                class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                            <% for (let i = 0; i < brand.length; i++) { %>
                                <option value="<%= brand[i].brandName %>" 
                                    <% if (product.brand && product.brand._id && brand[i]._id.toString() === product.brand._id.toString()) { %>selected<% } %>>
                                    <%= brand[i].brandName %>
                                </option>
                            <% } %>
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Category</label>
                            <select class="form-select border" name="category">
                            <% for (let i = 0; i < cat.length; i++) { %>
                                <option value="<%= cat[i].name %>" 
                                    <% if (product.category && product.category._id && cat[i]._id.toString() === product.category._id.toString()) { %>selected<% } %>>
                                    <%= cat[i].name %>
                                </option>
                            <% } %>
                            </select>
                            <div id="category-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea name="description" class="form-control border" rows="4"><%= product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text"
                                        value="<%= product.regularPrice %>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input name="salePrice" type="text" value="<%= product.salePrice %>"
                                        class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input name="quantity" type="text" value="<%= product.quantity %>"
                                        class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%= product.color %>"
                                        class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                        <% for (let i = 0; i < cat.length; i++) { %>
                                            <option value="<%= cat[i].name %>"
                                                <% if (product.category && product.category._id && cat[i]._id.toString() === product.category._id.toString()) { %>selected<% } %>>
                                                <%= cat[i].name %>
                                            </option>
                                        <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Product Images</label>
                                <div class="row">
                                <% if (product.productImage && product.productImage.length > 0) { %>
                                    <div class="col-12 mb-3">
                                        <div class="thumbnails-container">
                                            <% product.productImage.forEach((image, index) => { %>
                                                <div class="thumbnail position-relative">
                                                    <img src="/uploads/product-images/<%= image %>" alt="Product Image" style="width: 100px; height: 100px; object-fit: cover;">
                                                    <button type="button" class="btn btn-danger btn-sm delete-image-btn" 
                                                        data-image="<%= image %>" 
                                                        data-product="<%= product._id %>"
                                                        style="position: absolute; top: 5px; right: 5px;">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </div>
                                            <% }); %>
                                        </div>
                                    </div>
                                <% } %>
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label">Add New Images</label>
                                        <input type="file" name="images" class="form-control border" multiple accept="image/*" id="imageInput">
                                    </div>
                                    
                                    <div id="previewContainer" class="row mt-3">
                                        <!-- Cropped image previews will appear here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="mt-4">
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="submit">Update Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Cropper Modal - Place outside the form -->
<div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="cropperImage" src="" alt="Image to crop" style="max-width: 100%;">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="cropButton">Crop & Save</button>
            </div>
        </div>
    </div>
</div>

<%- include("../../views/partials/admin/footer") %>

<script>
$(document).ready(function() {
    // Global variables for cropper
    let cropper = null;
    let croppedImages = [];
    let currentFileIndex = 0;
    let files = [];
    let cropperModal = null;
    
    // Initialize the Bootstrap modal
    cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
    
    // Handle image input change event
    $('#imageInput').on('change', function(e) {
        files = Array.from(e.target.files);
        if (files.length > 0) {
            currentFileIndex = 0;
            processNextImage();
        }
    });
    
    function processNextImage() {
        if (currentFileIndex < files.length) {
            const file = files[currentFileIndex];
            
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    // Set the image source
                    $('#cropperImage').attr('src', e.target.result);
                    
                    // Destroy previous cropper if it exists
                    if (cropper) {
                        cropper.destroy();
                    }
                    
                    // Initialize Cropper
                    cropper = new Cropper(document.getElementById('cropperImage'), {
                        aspectRatio: 1,
                        viewMode: 2,
                        dragMode: 'move',
                        autoCropArea: 1,
                        restore: false,
                        guides: true,
                        center: true,
                        highlight: false,
                        cropBoxMovable: true,
                        cropBoxResizable: true,
                        toggleDragModeOnDblclick: false,
                    });
                    
                    // Open the modal
                    cropperModal.show();
                };
                reader.readAsDataURL(file);
            } else {
                // Skip non-image files
                currentFileIndex++;
                processNextImage();
            }
        }
    }
    
    // Crop button click handler
    $('#cropButton').on('click', function() {
        if (!cropper) return;
        
        // Get the cropped canvas
        const canvas = cropper.getCroppedCanvas({
            width: 440,
            height: 440
        });
        
        // Convert canvas to blob
        canvas.toBlob(function(blob) {
            // Create a preview element
            const previewDiv = $('<div>').addClass('col-md-3');
            const previewContainer = $('<div>').addClass('preview-image-container');
            const previewImg = $('<img>').addClass('preview-image').attr('src', canvas.toDataURL());
            const removeButton = $('<button>').addClass('remove-preview').html('&times;');
            
            previewContainer.append(previewImg, removeButton);
            previewDiv.append(previewContainer);
            $('#previewContainer').append(previewDiv);
            
            // Create a File object from the blob
            const croppedFile = new File([blob], files[currentFileIndex].name, {
                type: 'image/jpeg',
                lastModified: new Date().getTime()
            });
            
            // Store the cropped file
            croppedImages.push(croppedFile);
            
            // Remove handler for preview
            removeButton.on('click', function() {
                const index = $('#previewContainer .col-md-3').index(previewDiv);
                if (index > -1) {
                    croppedImages.splice(index, 1);
                    previewDiv.remove();
                }
            });
            
            // Close the modal
            cropperModal.hide();
            
            // Process next image if available
            currentFileIndex++;
            setTimeout(processNextImage, 500);
        }, 'image/jpeg', 0.9);
    });
    
    // Handle form submission
    $('#editProductForm').on('submit', function(e) {
        if (croppedImages.length > 0) {
            e.preventDefault();
            
            // Create a new FormData object
            const formData = new FormData(this);
            
            // Remove the original image files
            formData.delete('images');
            
            // Add each cropped image
            croppedImages.forEach(function(file, index) {
                formData.append('images', file);
            });
            
            // Submit the form with FormData
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Redirect on success or handle response
                    window.location.href = '/admin/products';
                },
                error: function(xhr, status, error) {
                    console.error('Error submitting form:', error);
                    alert('Error updating product: ' + error);
                }
            });
        }
        // If no cropped images, let the form submit normally
    });
    
    // Handle image deletion
    $('.delete-image-btn').on('click', function() {
        const imageName = $(this).data('image');
        const productId = $(this).data('product');
        
        if (imageName && productId) {
            deleteImage(imageName, productId, $(this));
        }
    });
    
    // Function to delete an image
    function deleteImage(imageName, productId, buttonElement) {
        if (!confirm('Are you sure you want to delete this image?')) {
            return;
        }
        
        // Add loading spinner
        const originalHtml = buttonElement.html();
        buttonElement.html('<span class="spinner"></span>');
        buttonElement.prop('disabled', true);
        
        $.ajax({
            url: '/admin/deleteImage',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                imageNameToServer: imageName,
                productIdToServer: productId
            }),
            success: function(response) {
                if (response.status === true) {
                    // Remove the thumbnail
                    buttonElement.closest('.thumbnail').remove();
                    alert('Image deleted successfully');
                } else {
                    alert(response.message || 'Failed to delete image');
                }
            },
            error: function(xhr, status, error) {
                console.error('Error:', error);
                alert('Error deleting image: ' + error);
            },
            complete: function() {
                // Restore button state
                buttonElement.html(originalHtml);
                buttonElement.prop('disabled', false);
            }
        });
    }
    
    // Handle modal close event - clean up cropper
    $('#cropperModal').on('hidden.bs.modal', function() {
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    });
});
</script>