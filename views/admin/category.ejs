<%- include("../../views/partials/admin/header") %>
  <style>
 
.search-input {
    border: 1px solid #3c2a21;
    border-radius: 4px;
    padding: 6px 12px;
    height: 32px;
    font-size: 14px;
}

.search-btn {
    height: 32px;
    padding: 6px 18px;
    border-radius: 4px;
    font-size: 15px;
    background-color: #5C4033;
    color: #403006;
    border: none;
    font-weight: 500;
    box-shadow: 0 2px 6px rgba(60,42,33,0.08);
    transition: background 0.3s, color 0.3s;
}

.search-btn:hover {
    background-color: #8B5E3C !important;
    color: #51320c !important;
}

.clear-btn {
    height: 32px;
    padding: 6px 12px;
    border-radius: 4px;
    font-size: 14px;
    background-color: #dc3545;
    color: rgb(64, 51, 9);
    border: none;
    transition: background-color 0.3s;
}

.clear-btn:hover {
    background-color: #c82333;
}

.search-container {
    display: flex;
    align-items: center;
    gap: 8px;
}

.btn-offer {
    background-color: #28a745 !important;
    color: white !important;
    border: none;
}

.btn-offer:hover {
    background-color: #218838 !important;
}

.btn-remove {
    background-color: #dc3545 !important;
    color: white !important;
    border: none;
    margin-left: 5px;
}

.btn-remove:hover {
    background-color: #c82333 !important;
}
  </style>


<!-- Required Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"><!-- Font Awesome for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<div class="main-content">
    <div class="container-fluid">
        <!-- Search Form Row at Top -->
        <div class="container-fluid mt-4">
          <div class="row">
            <div class="col-12 mb-3">
              <div class="d-flex justify-content-start align-items-center">
                <form action="/admin/category" method="GET" class="d-flex" style="max-width: 350px; width: 100%;">
                  <input type="text" name="search" class="form-control search-input" placeholder="Search categories..." value="<%= search || '' %>">
                  <button type="submit" class="btn search-btn ms-2">
                    <i class="fas fa-search"></i> 
                  </button>
                  <% if (search) { %>
                    <a href="/admin/category" class="btn clear-btn ms-2">
                      <i class="fas fa-times"></i> 
                    </a>
                  <% } %>
                </form>
              </div>
            </div>
          </div>
        </div>
        <div class="row">
            <!-- Add Category Button and Search Bar in Single Line -->
           <!-- Add Category Left | Search Bar Right -->
<div class="col-12 mb-3">
    <div class="d-flex justify-content-between align-items-center">
        <!-- Add Category Button Left -->
        <button type="button" class="btn w-auto" style="background-color: #5C4033; color: white;" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
            <i class="fas fa-plus"></i> Add Category
        </button>
        <!-- Remove the search bar here -->
    </div>
</div>
              

            <!-- Category Table -->
            <div class="col-12">
                <!-- Table -->
                <div class="table-responsive shadow-sm">
                    <table class="table table-bordered align-middle text-center">
                        <thead style="background-color: #8B5E3C; color: white;">
                            <tr>
                                <th>No</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Status</th>
                                <th>List/Unlist</th>
                                <th>Offer</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cat && cat.length > 0) { %>
                                <% cat.forEach((category, index) => { %>
                                    <tr data-category-id="<%= category._id %>">
                                        <td><%= index + 1 %></td>
                                        <td><%= category.name %></td>
                                        <td><%= category.description %></td>
                                        <td>
                                            <span class="badge <%= category.isListed ? 'bg-success' : 'bg-danger' %>">
                                                <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                            </span>
                                        </td>
                                        <td>
                                            <% if (category.isListed) { %>
                                                <a href="/admin/UnlistCategory?id=<%= category._id %>" class="btn btn-sm text-white" style="background-color: #A0522D;">Unlist</a>
                                            <% } else { %>
                                                <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-sm text-white" style="background-color: #6B8E23;">List</a>
                                            <% } %>
                                        </td>
                                        <td>
                                            <% 
                                                const activeOffer = category.activeOffer;
                                                if (activeOffer) { 
                                            %>
                                                <div class="d-flex align-items-center justify-content-center">
                                                    <span class="badge bg-success me-2"><%= activeOffer.discountPercentage %>% OFF</span>
                                                    <button onclick="removeCategoryOffer('<%= category._id %>')" class="btn btn-sm btn-remove" title="Remove Offer">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </div>
                                            <% } else { %>
                                                <button onclick="showCategoryOfferModal('<%= category._id %>', '<%= category.name %>')" class="btn btn-sm btn-offer" title="Add Offer">
                                                    <i class="fas fa-tag"></i> Add Offer
                                                </button>
                                            <% } %>
                                        </td>
                                        <td>
                                            <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info btn-sm">Edit</a>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="7" class="text-center">No categories found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            <% if (currentPage > 1) { %>
                                <li class="page-item">
                                    <a class="page-link" href="/admin/category?page=<%= currentPage - 1 %>&search=<%= search || '' %>">Previous</a>
                                </li>
                            <% } %>

                            <li class="page-item active">
                                <span class="page-link"><%= currentPage %></span>
                            </li>

                            <% if (currentPage < totalPages) { %>
                                <li class="page-item">
                                    <a class="page-link" href="/admin/category?page=<%= currentPage + 1 %>&search=<%= search || '' %>">Next</a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>
          </div>
        </div>
      </div>
    </div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header text-white" style="background-color: #5C4033;">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm" action="/admin/addCategory" method="post" onsubmit="return validateAddCategoryForm()">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="categoryName" name="categoryName" placeholder="Category name" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <input type="text" class="form-control" id="description" name="description" placeholder="Short description" required>
                    </div>
                    <div class="modal-footer">
                        <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> -->
                        <button type="submit" class="btn text-white" style="background-color: #8B5E3C;">Add Category</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Category Offer Modal -->
<div class="modal fade" id="categoryOfferModal" tabindex="-1" aria-labelledby="categoryOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryOfferModalLabel">Add Category Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="categoryOfferForm">
                    <input type="hidden" id="categoryId" name="categoryId">
                    <div class="mb-3">
                        <label for="categoryNameDisplay" class="form-label">Category</label>
                        <input type="text" class="form-control" id="categoryNameDisplay" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="discountPercentage" class="form-label">Discount Percentage</label>
                        <input type="number" class="form-control" id="discountPercentage" name="discountPercentage" min="1" max="100" step="0.01" required>
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="datetime-local" class="form-control" id="startDate" name="startDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="datetime-local" class="form-control" id="endDate" name="endDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="applyCategoryOffer()">Apply Offer</button>
            </div>
        </div>
    </div>
</div>

<!-- Required Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>


// Toast function
// Toast function
function showToast(message, type) {
    const Toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 4000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });

    Toast.fire({
        icon: type,
        title: message
    });
}

// Function to fetch and display active offers
async function loadActiveOffers() {
    console.log('🔍 Loading active offers...');
    try {
        const response = await fetch('/admin/categories/activeOffers');
        const result = await response.json();
        
        console.log('📊 Active offers response:', result);
        
        if (result.success) {
            console.log('✅ Found active offers:', result.offers);
            updateOfferButtons(result.offers);
        } else {
            console.log('❌ No active offers or error:', result.message);
            // Still call updateOfferButtons with empty array to reset buttons
            updateOfferButtons([]);
        }
    } catch (error) {
        console.error('💥 Error loading active offers:', error);
        // Reset buttons on error
        updateOfferButtons([]);
    }
}

// Function to update the offer buttons based on active offers
function updateOfferButtons(activeOffers) {
    console.log('🔄 Updating offer buttons with:', activeOffers);
    
    // Create a map of categoryId to offer for quick lookup
    const offerMap = new Map();
    activeOffers.forEach(offer => {
        if (offer.category && offer.category._id) {
            console.log('📝 Mapping offer:', offer.category._id.toString(), '→', offer.discountPercentage + '%');
            offerMap.set(offer.category._id.toString(), offer);
        }
    });
    
    console.log('🗺️ Offer map created:', offerMap);
    
    // Update all offer cells - target the correct elements
    const rows = document.querySelectorAll('tr[data-category-id]');
    console.log('📋 Found table rows:', rows.length);
    
    rows.forEach((row, index) => {
        const categoryId = row.getAttribute('data-category-id');
        const offer = offerMap.get(categoryId);
        
        console.log(`Row ${index + 1}: CategoryID=${categoryId}, HasOffer=${!!offer}`);
        
        // Find the offer cell (6th td - index 5)
        const offerCell = row.children[5]; // 0-based index: No, Name, Description, Status, List/Unlist, Offer, Action
        
        if (!offerCell) {
            console.error('❌ Offer cell not found for row:', index + 1);
            return;
        }
        
        if (offer) {
            console.log(`✅ Updating row ${index + 1} with offer: ${offer.discountPercentage}%`);
            // Category has an active offer - show percentage and remove button
            offerCell.innerHTML = `
                <div class="d-flex align-items-center justify-content-center">
                    <span class="badge bg-success me-2">${offer.discountPercentage}% OFF</span>
                    <button onclick="removeCategoryOffer('${categoryId}')" class="btn btn-sm btn-remove" title="Remove Offer">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
        } else {
            console.log(`➕ Updating row ${index + 1} with Add Offer button`);
            // Category has no active offer - show "Add Offer" button
            // Get category name from the row
            const categoryName = row.children[1].textContent.trim(); // Name is in 2nd column (index 1)
            offerCell.innerHTML = `
                <button onclick="showCategoryOfferModal('${categoryId}', '${categoryName}')" class="btn btn-sm btn-offer" title="Add Offer">
                    <i class="fas fa-tag"></i> Add Offer
                </button>
            `;
        }
    });
    
    console.log('🎯 Offer buttons updated successfully');
}

document.addEventListener("DOMContentLoaded", function () {
    console.log('🚀 DOM Content Loaded - Initializing...');
    
    // Initialize Bootstrap modal
    const addCategoryModal = new bootstrap.Modal(document.getElementById('addCategoryModal'));

    // Load active offers when page loads
    console.log('📥 Loading active offers on page load...');
    loadActiveOffers();

    // Set minimum datetime for offer dates
    const now = new Date();
    const offset = now.getTimezoneOffset() * 60000;
    const localTime = new Date(now.getTime() - offset);
    const minDateTime = localTime.toISOString().slice(0, 16);
    
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    
    if (startDateInput) startDateInput.min = minDateTime;
    if (endDateInput) endDateInput.min = minDateTime;

    // Handle unlist category buttons
    const unlistButtons = document.querySelectorAll("[href*='UnlistCategory']");
    unlistButtons.forEach(button => {
        button.addEventListener("click", function(e) {
            e.preventDefault();
            const href = this.getAttribute("href");
            Swal.fire({
                title: "Are you sure?",
                text: "This will unlist the category!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, unlist it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = href;
                }
            });
        });
    });

    // Update end date minimum when start date changes
    if (startDateInput) {
        startDateInput.addEventListener('change', function() {
            const startDate = this.value;
            if (startDate && endDateInput) {
                endDateInput.min = startDate;
                // Clear end date if it's before the new start date
                if (endDateInput.value && endDateInput.value < startDate) {
                    endDateInput.value = '';
                }
            }
        });
    }
});

// Function to validate add category form
function validateAddCategoryForm() {
    const categoryName = document.getElementById('categoryName').value.trim();
    const description = document.getElementById('description').value.trim();
    
    // Check if category name is empty
    if (!categoryName) {
        Swal.fire({
            icon: 'error',
            title: 'Category Name Required!',
            text: 'Please enter a category name.',
            confirmButtonColor: '#5C4033'
        });
        document.getElementById('categoryName').focus();
        return false;
    }
    
    // Check if description is empty
    if (!description) {
        Swal.fire({
            icon: 'error',
            title: 'Description Required!',
            text: 'Please enter a category description.',
            confirmButtonColor: '#5C4033'
        });
        document.getElementById('description').focus();
        return false;
    }
    
    // If both fields are filled, allow form submission
    return true;
}

function showCategoryOfferModal(categoryId, categoryName) {
    console.log('🎭 Opening offer modal for:', categoryId, categoryName);
    
    // Set form values
    document.getElementById('categoryId').value = categoryId;
    document.getElementById('categoryNameDisplay').value = categoryName;
    
    // Clear previous values
    document.getElementById('discountPercentage').value = '';
    document.getElementById('startDate').value = '';
    document.getElementById('endDate').value = '';
    
    // Reset form validation states
    const form = document.getElementById('categoryOfferForm');
    form.classList.remove('was-validated');
    
    // Show modal
    const modal = new bootstrap.Modal(document.getElementById('categoryOfferModal'));
    modal.show();
}

async function applyCategoryOffer() {
    console.log('🎯 Applying category offer...');
    
    const form = document.getElementById('categoryOfferForm');
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    console.log('📋 Form data:', data);

    // Validate form data
    if (!data.categoryId || !data.discountPercentage || !data.startDate || !data.endDate) {
        showToast('Please fill all fields', 'error');
        return;
    }

    const discount = parseFloat(data.discountPercentage);
    if (isNaN(discount) || discount <= 0 || discount > 100) {
        showToast('Discount must be between 1 and 100', 'error');
        return;
    }

    const startDate = new Date(data.startDate);
    const endDate = new Date(data.endDate);
    const now = new Date();
    
    if (startDate >= endDate) {
        showToast('End date must be after start date', 'error');
        return;
    }

    if (endDate <= now) {
        showToast('End date must be in the future', 'error');
        return;
    }

    // Show loading state
    const applyButton = document.querySelector('[onclick="applyCategoryOffer()"]');
    const originalText = applyButton.innerHTML;
    applyButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Applying...';
    applyButton.disabled = true;

    try {
        console.log('📤 Sending offer data:', data);
        
        const response = await fetch('/admin/categories/applyOffer', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        const result = await response.json();
        console.log('📥 Server response:', result);
        
        if (result.success) {
            showToast(result.message, 'success');
            
            // Close the modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('categoryOfferModal'));
            modal.hide();
            
            // Force reload active offers after a short delay
            console.log('🔄 Reloading active offers after successful application...');
            setTimeout(() => {
                loadActiveOffers();
            }, 1000); // Increased delay to ensure server processing is complete
        } else {
            showToast(result.message || 'Failed to apply offer', 'error');
        }
    } catch (error) {
        console.error('💥 Error applying category offer:', error);
        showToast('Network error. Please try again.', 'error');
    } finally {
        // Reset button state
        applyButton.innerHTML = originalText;
        applyButton.disabled = false;
    }
}

async function removeCategoryOffer(categoryId) {
    console.log('🗑️ Removing category offer for:', categoryId);
    
    const result = await Swal.fire({
        title: 'Remove Category Offer?',
        text: 'This will remove the offer from all products in this category.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, remove it!'
    });

    if (!result.isConfirmed) {
        return;
    }

    try {
        console.log('📤 Sending remove request for category:', categoryId);
        
        const response = await fetch('/admin/categories/removeOffer', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ categoryId })
        });

        const serverResult = await response.json();
        console.log('📥 Remove offer response:', serverResult);
        
        if (serverResult.success) {
            showToast(serverResult.message, 'success');
            
            // Force reload active offers after removal
            console.log('🔄 Reloading active offers after removal...');
            setTimeout(() => {
                loadActiveOffers();
            }, 1000);
        } else {
            showToast(serverResult.message || 'Failed to remove offer', 'error');
        }

    } catch (error) {
        console.error('💥 Error removing category offer:', error);
        showToast('Error removing category offer', 'error');
    }
}

// Manual refresh function for debugging
function forceRefreshOffers() {
    console.log('🔄 Manually refreshing offers...');
    loadActiveOffers();
}

document.getElementById('addCategoryForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    const data = {
        categoryName: formData.get('categoryName'),
        description: formData.get('description')
    };

    try {
        const response = await fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Category added!',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        } else {
            const result = await response.json();
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.error || 'An error occurred'
            });
        }
    } catch (err) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Network error. Please try again.'
        });
    }
});
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<%- include("../../views/partials/admin/footer") %>